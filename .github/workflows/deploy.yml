name: Deploy to github.io

on:
    push:
        branches: [ main ]
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: "pages"
    cancel-in-progress: true

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: 'npm'
                  cache-dependency-path: package-lock.json   #ルートのlockを使用

            - name: Install dependencies
              run: npm ci  #react/react-domはpackage.jsonにある想定

            - name: Build header.js with esbuild
              run: |
                  #作業用ディレクトリを作成
                  rm -rf publish
                  mkdir -p publish/js

                  #静的ファイルをすべてpublishへコピーする
                  cp -a index.html css html image js json publish/ 2>/dev/null || true

                  #esbuildでheader.jsをバンドル(置き換わり確認用ログ出力も添えて)
                  npx esbuild js/header.js \
                    --bundle \
                    --platform=browser \
                    --format=esm \
                    --jsx=automatic \
                    --jsx-import-source=react \
                    --loader:.jsx=jsx \
                    --minify \
                    --banner:js="console.log('[GPT]bundled header.js @ $GITHUB_SHA');" \
                    --outfile=publish/js/header.js

            - name: Verify & purge .jsx from publish
              run: |
                #publishフォルダ内の.jsxを可視化
                find publish -type f -name "*.jsx" -print || true
                #読み込み防止のため強制削除
                find publish -type f -name "*.jsx" -delete || true

            - name: Verify bundled header.js
              run: |
                #[DEBUG].jsx importがあればビルド失敗扱いにする
                if grep -nE 'from +["'\''"].+/components/.+\.jsx["'\''"]' publish/js/header.js; then
                    echo "[GPT]ERROR:.jsx importがpublish/js/header.js内に残っています"; exit 1;
                fi
                #[DEBUG]上書きされたか確認
                wc -c publish/js/header.js
                head -n 3 publish/js/header.js

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                path: publish  #ビルドされたファイルを出力

    deploy:
        needs: build
        runs-on: ubuntu-latest
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Deploy
              id: deployment
              uses: actions/deploy-pages@v4
